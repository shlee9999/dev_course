/*header*/
.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 999;

  display: flex;
  justify-content: space-between;
  align-items: center;

  padding-left: 40px;
  padding-right: 40px;

  background-color: var(--color-white);

  box-shadow: 0 4px 40px rgba(0, 0, 0, 0.1);
  /* 
    기존의 코드
    width: 1440px;
    height: 5vh;
  
    width를 고정값으로 주게 된다면, 유동적으로 버튼이 움직이지 않는다.
    height는 vh가 아닌 픽셀이나 헤더가 가지는 컨텐츠의 양에 따라 바뀌도록 해야 한다.
    */
}
/*질문*/
/*헤더에만 class를 부여하고, 내부의 요소를 inline 태그로 접근하는 것이 올바른 방법인지 고민된다.*/
/*헤더에만 class 부여하고, 내부의 요소 인라인 태그로 접근하기 VS 내부의 요소까지 class를 부여하기*/
.header > h1 {
  margin-top: 20px;
  margin-bottom: 20px;
}

.header > nav > ul {
  display: flex;
  justify-content: space-between;
  color: var(--color-gray-700);
}
.header > nav > ul > li {
  position: relative;
  margin-right: 48px;
}
.header > nav > ul > li:last-child {
  margin-right: 0;
}
.header > nav > ul > li:hover a {
  color: var(--color-primary-bg);
}
.header > nav > ul > li:hover::before {
  content: "";
  background-image: url("./image/header-bar.png");
  background-size: cover;
  background-repeat: no-repeat;

  position: absolute;
  display: block;
  width: 50%;
  height: 4px;
  bottom: -10px;
  left: 0;
}
/*질문*/
/*버튼의 경우, px로 크기를 고정하는 것 VS %로 크기를 고정하지 않는 것.*/
.header > button {
  padding: 14px 25px;
  border-radius: 10px;
  border: none;

  color: var(--color-gray-50);
  background: linear-gradient(to left bottom, #f76680, #57007b);
}

@media (max-width: 1100px) {
  .header {
    justify-content: center;
  }
  .header > nav,
  .header > button {
    display: none;
  }
}
